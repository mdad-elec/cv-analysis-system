version: '3.8'

services:
  backend:
    build: ./backend
    container_name: cv-analysis-backend
    restart: unless-stopped
    volumes:
      - ./backend:/app
      - ./data:/app/data
    env_file:
      - .env
    ports:
      - "8000:8000"
    depends_on:
      - mongodb
      - redis
    environment:
      - MONGODB_URL=mongodb://mongodb:27017
      - REDIS_URL=redis://redis:6379
    networks:
      - cv-analysis-network

  frontend:
    build: ./frontend
    container_name: cv-analysis-frontend
    restart: unless-stopped
    ports:
      - "80:80"
    depends_on:
      - backend
    networks:
      - cv-analysis-network

  mongodb:
    image: mongo:6
    container_name: cv-analysis-mongodb
    restart: unless-stopped
    volumes:
      - mongodb_data:/data/db
    ports:
      - "27017:27017"
    networks:
      - cv-analysis-network

  redis:
    image: redis:7-alpine
    container_name: cv-analysis-redis
    restart: unless-stopped
    volumes:
      - redis_data:/data
    ports:
      - "6379:6379"
    networks:
      - cv-analysis-network

  prometheus:
    image: prom/prometheus:latest
    container_name: cv-analysis-prometheus
    restart: unless-stopped
    volumes:
      - ./monitoring/prometheus/prometheus.yml:/etc/prometheus/prometheus.yml
      - prometheus_data:/prometheus
    ports:
      - "9090:9090"
    depends_on:
      - backend
    networks:
      - cv-analysis-network

  grafana:
    image: grafana/grafana:10.2.0
    user: "472"    
    container_name: cv-analysis-grafana
    restart: unless-stopped
    volumes:
      - ./monitoring/grafana/provisioning:/etc/grafana/provisioning
      - grafana_data:/var/lib/grafana
    ports:
      - "3001:3000"
    depends_on:
      - prometheus
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=admin
      - GF_USERS_ALLOW_SIGN_UP=false
    networks:
      - cv-analysis-network

networks:
  cv-analysis-network:
    driver: bridge

volumes:
  mongodb_data:
  redis_data:
  prometheus_data:
  grafana_data: